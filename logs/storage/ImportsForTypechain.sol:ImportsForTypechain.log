src/aggregate-router/test/ImportsForTypechain.sol:ImportsForTypechain:balanceOf (storage_slot: 0) (offset: 0) (type: mapping(address => mapping(uint256 => uint256))) (numberOfBytes: 32)
src/aggregate-router/test/ImportsForTypechain.sol:ImportsForTypechain:isApprovedForAll (storage_slot: 1) (offset: 0) (type: mapping(address => mapping(address => bool))) (numberOfBytes: 32)
src/aggregate-router/test/ImportsForTypechain.sol:ImportsForTypechain:_owner (storage_slot: 2) (offset: 0) (type: address) (numberOfBytes: 20)
src/aggregate-router/test/ImportsForTypechain.sol:ImportsForTypechain:_spenders (storage_slot: 3) (offset: 0) (type: mapping(address => bool)) (numberOfBytes: 32)
src/aggregate-router/test/ImportsForTypechain.sol:ImportsForTypechain:_allSpendersAllowed (storage_slot: 4) (offset: 0) (type: bool) (numberOfBytes: 1)
src/aggregate-router/test/ImportsForTypechain.sol:ImportsForTypechain:nonceBitmap (storage_slot: 5) (offset: 0) (type: mapping(address => mapping(uint256 => uint256))) (numberOfBytes: 32)
src/aggregate-router/test/ImportsForTypechain.sol:ImportsForTypechain:allowance (storage_slot: 6) (offset: 0) (type: mapping(address => mapping(address => mapping(address => struct IAllowanceTransfer.PackedAllowance)))) (numberOfBytes: 32)